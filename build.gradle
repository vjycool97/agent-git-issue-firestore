plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.0'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.company'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '21'
    targetCompatibility = '21'
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-cache'
    
    // Spring Retry
    implementation 'org.springframework.retry:spring-retry'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    
    // Firebase Admin SDK
    implementation 'com.google.firebase:firebase-admin:9.2.0'
    
    // Caffeine Cache
    implementation 'com.github.ben-manes.caffeine:caffeine'
    
    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'
    
    // Configuration processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    
    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
    testImplementation 'javax.servlet:javax.servlet-api:4.0.1'
    testImplementation 'org.testcontainers:gcloud:1.19.3'
    testImplementation 'org.awaitility:awaitility:4.2.0'
    testImplementation 'org.testcontainers:testcontainers:1.19.3'
    testImplementation 'org.junit.platform:junit-platform-suite:1.10.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

// Java 21 configuration with preview features enabled
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.release = 21
    options.compilerArgs += ['--enable-preview']
}

tasks.withType(Test) {
    jvmArgs += ['--enable-preview']
}